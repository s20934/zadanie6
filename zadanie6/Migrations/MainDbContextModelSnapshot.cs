// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using zadanie6.Models;

namespace zadanie6.Migrations
{
    [DbContext(typeof(MainDbContext))]
    partial class MainDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("zadanie6.Models.Doctor", b =>
                {
                    b.Property<int>("IdDoctor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdDoctor");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            IdDoctor = 1,
                            Email = "gwiaz@o2.pl",
                            FirstName = "Marek",
                            LastName = "pijak"
                        },
                        new
                        {
                            IdDoctor = 2,
                            Email = "swist@o2.pl",
                            FirstName = "Elzo",
                            LastName = "Monzales"
                        });
                });

            modelBuilder.Entity("zadanie6.Models.Medicament", b =>
                {
                    b.Property<int>("IdMedicament")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdMedicament");

                    b.ToTable("Medicaments");

                    b.HasData(
                        new
                        {
                            IdMedicament = 1,
                            Description = "Opis",
                            Name = "Syrop",
                            Type = "Jakis tam zilowoy"
                        },
                        new
                        {
                            IdMedicament = 2,
                            Description = "Na chore oczy",
                            Name = "Krople",
                            Type = "Jakis tam zilowoy"
                        },
                        new
                        {
                            IdMedicament = 3,
                            Description = "Na chore oczy",
                            Name = "Wziewy",
                            Type = "Jakis tam zilowoy"
                        },
                        new
                        {
                            IdMedicament = 4,
                            Description = "Na chore oczy",
                            Name = "Plastry",
                            Type = "Jakis tam zilowoy"
                        },
                        new
                        {
                            IdMedicament = 5,
                            Description = "Na chore oczy",
                            Name = "Tabletki",
                            Type = "Jakis tam zilowoy"
                        });
                });

            modelBuilder.Entity("zadanie6.Models.Patient", b =>
                {
                    b.Property<int>("IdPatient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdPatient");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            IdPatient = 1,
                            BirthDay = new DateTime(2022, 6, 11, 14, 41, 26, 874, DateTimeKind.Utc).AddTicks(3633),
                            FirstName = "Marek",
                            LastName = "pijak"
                        },
                        new
                        {
                            IdPatient = 2,
                            BirthDay = new DateTime(2022, 6, 11, 14, 41, 26, 874, DateTimeKind.Utc).AddTicks(3969),
                            FirstName = "Sylwia",
                            LastName = "Pajonk"
                        });
                });

            modelBuilder.Entity("zadanie6.Models.Prescription", b =>
                {
                    b.Property<int>("IdPrescription")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDoctor")
                        .HasColumnType("int");

                    b.Property<int>("IdPatient")
                        .HasColumnType("int");

                    b.HasKey("IdPrescription");

                    b.HasIndex("IdDoctor");

                    b.HasIndex("IdPatient");

                    b.ToTable("Prescriptions");

                    b.HasData(
                        new
                        {
                            IdPrescription = 1,
                            Date = new DateTime(2022, 6, 11, 14, 41, 26, 876, DateTimeKind.Utc).AddTicks(689),
                            DueDate = new DateTime(2022, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 1,
                            IdPatient = 2
                        },
                        new
                        {
                            IdPrescription = 2,
                            Date = new DateTime(2022, 6, 11, 14, 41, 26, 890, DateTimeKind.Utc).AddTicks(2688),
                            DueDate = new DateTime(2022, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 2,
                            IdPatient = 1
                        });
                });

            modelBuilder.Entity("zadanie6.Models.Prescription_Medicament", b =>
                {
                    b.Property<int>("IdPrescription")
                        .HasColumnType("int");

                    b.Property<int>("IdMedicament")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Dose")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.HasKey("IdPrescription", "IdMedicament");

                    b.HasIndex("IdMedicament");

                    b.ToTable("Prescription_Medicaments");

                    b.HasData(
                        new
                        {
                            IdPrescription = 1,
                            IdMedicament = 1,
                            Details = "cos tam",
                            Dose = 2
                        },
                        new
                        {
                            IdPrescription = 1,
                            IdMedicament = 2,
                            Details = "cos tam",
                            Dose = 2
                        },
                        new
                        {
                            IdPrescription = 1,
                            IdMedicament = 3,
                            Details = "cos tam",
                            Dose = 2
                        },
                        new
                        {
                            IdPrescription = 1,
                            IdMedicament = 4,
                            Details = "cos tam",
                            Dose = 2
                        },
                        new
                        {
                            IdPrescription = 1,
                            IdMedicament = 5,
                            Details = "cos tam",
                            Dose = 2
                        },
                        new
                        {
                            IdPrescription = 2,
                            IdMedicament = 2,
                            Details = "cos tam i troche wiecej",
                            Dose = 5
                        });
                });

            modelBuilder.Entity("zadanie6.Models.Prescription", b =>
                {
                    b.HasOne("zadanie6.Models.Doctor", "Doctor")
                        .WithMany("Prescriptions")
                        .HasForeignKey("IdDoctor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("zadanie6.Models.Patient", "Patient")
                        .WithMany("Prescriptions")
                        .HasForeignKey("IdPatient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("zadanie6.Models.Prescription_Medicament", b =>
                {
                    b.HasOne("zadanie6.Models.Medicament", "Medicament")
                        .WithMany("Prescriptions_Medicament")
                        .HasForeignKey("IdMedicament")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("zadanie6.Models.Prescription", "Prescription")
                        .WithMany("Prescriptions_Medicament")
                        .HasForeignKey("IdPrescription")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicament");

                    b.Navigation("Prescription");
                });

            modelBuilder.Entity("zadanie6.Models.Doctor", b =>
                {
                    b.Navigation("Prescriptions");
                });

            modelBuilder.Entity("zadanie6.Models.Medicament", b =>
                {
                    b.Navigation("Prescriptions_Medicament");
                });

            modelBuilder.Entity("zadanie6.Models.Patient", b =>
                {
                    b.Navigation("Prescriptions");
                });

            modelBuilder.Entity("zadanie6.Models.Prescription", b =>
                {
                    b.Navigation("Prescriptions_Medicament");
                });
#pragma warning restore 612, 618
        }
    }
}
